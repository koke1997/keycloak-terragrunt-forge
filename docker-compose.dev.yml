services:
  postgres:
    image: postgres:15-alpine
    container_name: keycloak-forge-postgres-dev
    environment:
      POSTGRES_DB: keycloak_forge
      POSTGRES_USER: forge_user
      POSTGRES_PASSWORD: forge_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - keycloak-forge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forge_user -d keycloak_forge"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: keycloak-forge-redis-dev
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - keycloak-forge-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: keycloak-forge-keycloak-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_forge
      KC_DB_USERNAME: forge_user
      KC_DB_PASSWORD: forge_password
    command: start-dev
    ports:
      - "8090:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak-forge-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  backend:
    image: eclipse-temurin:17-jdk
    container_name: keycloak-forge-backend-dev
    working_dir: /app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:postgresql://postgres:5432/keycloak_forge
      DATABASE_USERNAME: forge_user
      DATABASE_PASSWORD: forge_password
      REDIS_URL: redis://redis:6379
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_ADMIN_USERNAME: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./backend-java:/app
      - maven_cache_dev:/root/.m2
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - keycloak-forge-network
    command: >
      sh -c "
        apt-get update -q &&
        apt-get install -y maven curl &&
        rm -rf /var/lib/apt/lists/* &&
        mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.profiles.active=docker'
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend-dev:
    image: node:18-alpine
    container_name: keycloak-forge-frontend-dev
    working_dir: /app
    volumes:
      - ./frontend:/app
      - node_modules_dev:/app/node_modules
    ports:
      - "3000:5173"
    environment:
      - VITE_API_BASE_URL=http://backend:8080
    command: >
      sh -c "
        npm install &&
        npm run dev -- --host 0.0.0.0 --port 5173
      "
    networks:
      - keycloak-forge-network
    depends_on:
      - backend

  # Nginx for production-like testing
  nginx:
    image: nginx:alpine
    container_name: keycloak-forge-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - keycloak-forge-network

networks:
  keycloak-forge-network:
    driver: bridge

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  maven_cache_dev:
    driver: local
  node_modules_dev:
    driver: local